name: "Build containers: Fedora CoreOS (next)"

env:
  IMAGE: 'quay.io/fedora/fedora-coreos'
  RELEASE: 'next'
  NAME: 'Fedora CoreOS (next)'
  REGISTRY: 'quay.io/travier'
  DESTINATION: 'fedora-coreos-sysexts'

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * MON'
  workflow_dispatch:

permissions: read-all

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs for
# pull requests only.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.sysext }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Reclaim disk space
        run: |
          sudo docker image prune --all --force
          sudo rm -rf "/usr/local/lib/android"

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: "Build container: btop"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'btop'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.btop
          containerfiles: 'btop/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: compsize"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'compsize'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.compsize
          containerfiles: 'compsize/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: distrobox"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'distrobox'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.distrobox
          containerfiles: 'distrobox/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: gdb"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'gdb'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.gdb
          containerfiles: 'gdb/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: git-tools"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'git-tools'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.git-tools
          containerfiles: 'git-tools/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: htop"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'htop'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.htop
          containerfiles: 'htop/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: iwd"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'iwd'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.iwd
          containerfiles: 'iwd/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: just"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'just'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.just
          containerfiles: 'just/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: monitoring"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'monitoring'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.monitoring
          containerfiles: 'monitoring/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: python"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'python'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.python
          containerfiles: 'python/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: ripgrep"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'ripgrep'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.ripgrep
          containerfiles: 'ripgrep/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: semanage"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'semanage'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.semanage
          containerfiles: 'semanage/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: strace"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'strace'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.strace
          containerfiles: 'strace/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: tree"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'tree'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.tree
          containerfiles: 'tree/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: "Build container: zsh"
        uses: redhat-actions/buildah-build@v2
        with:
          context: 'zsh'
          image: ${{ env.DESTINATION }}
          tags: ${{ env.RELEASE }}.zsh
          containerfiles: 'zsh/Containerfile'
          layers: false
          oci: true
          extra-args:
            --from
            ${{ env.IMAGE }}:${{ env.RELEASE }}

      - name: Login to Container Registry
        uses: redhat-actions/podman-login@v1
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}

      - uses: sigstore/cosign-installer@v3.7.0
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-btop
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.btop

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-btop.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-compsize
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.compsize

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-compsize.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-distrobox
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.distrobox

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-distrobox.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-gdb
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.gdb

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-gdb.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-git-tools
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.git-tools

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-git-tools.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-htop
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.htop

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-htop.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-iwd
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.iwd

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-iwd.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-just
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.just

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-just.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-monitoring
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.monitoring

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-monitoring.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-python
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.python

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-python.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-ripgrep
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.ripgrep

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-ripgrep.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-semanage
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.semanage

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-semanage.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-strace
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.strace

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-strace.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-tree
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.tree

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-tree.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: "Push to Container Registry"
        uses: redhat-actions/push-to-registry@v2
        id: push-zsh
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.DESTINATION }}
          registry: ${{ env.REGISTRY }}
          tags: ${{ env.RELEASE }}.zsh

      - name: "Sign container image"
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-zsh.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

