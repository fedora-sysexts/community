# SPDX-FileCopyrightText: Timoth√©e Ravier <tim@siosm.fr>
# SPDX-License-Identifier: CC0-1.0

name: "Build sysexts for Fedora"

env:
  GH_TOKEN: ${{ github.token }}
  RELEASEURL: "https://github.com/${{ github.repository }}/releases/download"

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
    inputs:
      force-rebuild:
        description: 'Force rebuild of all sysexts'
        required: true
        default: false
        type: boolean

# Needed to allow creating a release
permissions:
  contents: write

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-fedora-41-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: 1password-cli"
        uses: ./.github/actions/build
        with:
          sysext: '1password-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: 1password-gui"
        uses: ./.github/actions/build
        with:
          sysext: '1password-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bandwhich"
        uses: ./.github/actions/build
        with:
          sysext: 'bandwhich'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bitwarden"
        uses: ./.github/actions/build
        with:
          sysext: 'bitwarden'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cloud-hypervisor"
        uses: ./.github/actions/build
        with:
          sysext: 'cloud-hypervisor'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: dnclient"
        uses: ./.github/actions/build
        with:
          sysext: 'dnclient'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: docker-ce"
        uses: ./.github/actions/build
        with:
          sysext: 'docker-ce'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: glab"
        uses: ./.github/actions/build
        with:
          sysext: 'glab'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-chrome"
        uses: ./.github/actions/build
        with:
          sysext: 'google-chrome'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: incus"
        uses: ./.github/actions/build
        with:
          sysext: 'incus'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: microsoft-edge"
        uses: ./.github/actions/build
        with:
          sysext: 'microsoft-edge'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nordvpn-gui"
        uses: ./.github/actions/build
        with:
          sysext: 'nordvpn-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nordvpn"
        uses: ./.github/actions/build
        with:
          sysext: 'nordvpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openconnect"
        uses: ./.github/actions/build
        with:
          sysext: 'openconnect'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openh264"
        uses: ./.github/actions/build
        with:
          sysext: 'openh264'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tailscale"
        uses: ./.github/actions/build
        with:
          sysext: 'tailscale'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vagrant"
        uses: ./.github/actions/build
        with:
          sysext: 'vagrant'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  build-fedora-42-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: 1password-cli"
        uses: ./.github/actions/build
        with:
          sysext: '1password-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: 1password-gui"
        uses: ./.github/actions/build
        with:
          sysext: '1password-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bandwhich"
        uses: ./.github/actions/build
        with:
          sysext: 'bandwhich'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bitwarden"
        uses: ./.github/actions/build
        with:
          sysext: 'bitwarden'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cloud-hypervisor"
        uses: ./.github/actions/build
        with:
          sysext: 'cloud-hypervisor'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: dnclient"
        uses: ./.github/actions/build
        with:
          sysext: 'dnclient'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: docker-ce"
        uses: ./.github/actions/build
        with:
          sysext: 'docker-ce'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: glab"
        uses: ./.github/actions/build
        with:
          sysext: 'glab'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-chrome"
        uses: ./.github/actions/build
        with:
          sysext: 'google-chrome'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: incus"
        uses: ./.github/actions/build
        with:
          sysext: 'incus'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: microsoft-edge"
        uses: ./.github/actions/build
        with:
          sysext: 'microsoft-edge'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nordvpn-gui"
        uses: ./.github/actions/build
        with:
          sysext: 'nordvpn-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nordvpn"
        uses: ./.github/actions/build
        with:
          sysext: 'nordvpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nvidia-driver-cuda-580.95.05"
        uses: ./.github/actions/build
        with:
          sysext: 'nvidia-driver-cuda-580.95.05'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openconnect"
        uses: ./.github/actions/build
        with:
          sysext: 'openconnect'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openh264"
        uses: ./.github/actions/build
        with:
          sysext: 'openh264'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tailscale"
        uses: ./.github/actions/build
        with:
          sysext: 'tailscale'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vagrant"
        uses: ./.github/actions/build
        with:
          sysext: 'vagrant'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  build-fedora-43-x86_64:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: 1password-cli"
        uses: ./.github/actions/build
        with:
          sysext: '1password-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: bandwhich"
        uses: ./.github/actions/build
        with:
          sysext: 'bandwhich'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: dnclient"
        uses: ./.github/actions/build
        with:
          sysext: 'dnclient'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: glab"
        uses: ./.github/actions/build
        with:
          sysext: 'glab'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: google-chrome"
        uses: ./.github/actions/build
        with:
          sysext: 'google-chrome'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: microsoft-edge"
        uses: ./.github/actions/build
        with:
          sysext: 'microsoft-edge'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nordvpn-gui"
        uses: ./.github/actions/build
        with:
          sysext: 'nordvpn-gui'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: nordvpn"
        uses: ./.github/actions/build
        with:
          sysext: 'nordvpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openh264"
        uses: ./.github/actions/build
        with:
          sysext: 'openh264'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tailscale"
        uses: ./.github/actions/build
        with:
          sysext: 'tailscale'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  build-fedora-41-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:41"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: bandwhich"
        uses: ./.github/actions/build
        with:
          sysext: 'bandwhich'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: dnclient"
        uses: ./.github/actions/build
        with:
          sysext: 'dnclient'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: docker-ce"
        uses: ./.github/actions/build
        with:
          sysext: 'docker-ce'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: glab"
        uses: ./.github/actions/build
        with:
          sysext: 'glab'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: incus"
        uses: ./.github/actions/build
        with:
          sysext: 'incus'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openh264"
        uses: ./.github/actions/build
        with:
          sysext: 'openh264'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tailscale"
        uses: ./.github/actions/build
        with:
          sysext: 'tailscale'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  build-fedora-42-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:42"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: bandwhich"
        uses: ./.github/actions/build
        with:
          sysext: 'bandwhich'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: dnclient"
        uses: ./.github/actions/build
        with:
          sysext: 'dnclient'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: docker-ce"
        uses: ./.github/actions/build
        with:
          sysext: 'docker-ce'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: glab"
        uses: ./.github/actions/build
        with:
          sysext: 'glab'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: incus"
        uses: ./.github/actions/build
        with:
          sysext: 'incus'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openh264"
        uses: ./.github/actions/build
        with:
          sysext: 'openh264'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tailscale"
        uses: ./.github/actions/build
        with:
          sysext: 'tailscale'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  build-fedora-43-aarch64:
    runs-on: "ubuntu-24.04-arm"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    env:
      IMAGE: "quay.io/fedora-ostree-desktops/base-atomic:43"
      FORCE_REBUILD: ${{ inputs.force-rebuild }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Setup artifacts and dnf cache directories"
        run: |
          mkdir -p artifacts .dnf-cache

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Build sysext: bandwhich"
        uses: ./.github/actions/build
        with:
          sysext: 'bandwhich'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: cilium-cli"
        uses: ./.github/actions/build
        with:
          sysext: 'cilium-cli'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: dnclient"
        uses: ./.github/actions/build
        with:
          sysext: 'dnclient'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: glab"
        uses: ./.github/actions/build
        with:
          sysext: 'glab'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: mullvad-vpn"
        uses: ./.github/actions/build
        with:
          sysext: 'mullvad-vpn'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: openh264"
        uses: ./.github/actions/build
        with:
          sysext: 'openh264'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: tailscale"
        uses: ./.github/actions/build
        with:
          sysext: 'tailscale'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: virtctl"
        uses: ./.github/actions/build
        with:
          sysext: 'virtctl'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscode"
        uses: ./.github/actions/build
        with:
          sysext: 'vscode'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: vscodium"
        uses: ./.github/actions/build
        with:
          sysext: 'vscodium'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: wasmtime"
        uses: ./.github/actions/build
        with:
          sysext: 'wasmtime'
          image: ${{ env.IMAGE }}

      - name: "Build sysext: youki"
        uses: ./.github/actions/build
        with:
          sysext: 'youki'
          image: ${{ env.IMAGE }}

  publish-sysexts:
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/fedora-sysexts/buildroot:latest"
      options: "--privileged --security-opt label=disable --user 0:0"
    # Run after the builds and versionned release
    needs:
      - build-fedora-41-x86_64
      - build-fedora-41-aarch64
      - build-fedora-42-x86_64
      - build-fedora-42-aarch64
      - build-fedora-43-x86_64
      - build-fedora-43-aarch64
    # Use `always()` to still run if any dependent job fails
    if: ${{ always() && (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main' }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v5

      - name: "Mark directory as safe"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main

      - name: "Gather all sysexts releases"
        uses: ./.github/actions/gather
